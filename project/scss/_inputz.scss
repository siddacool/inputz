/*-------------------- dependencies*/

@import "_control";


//-------------------- global variables//
$inputz-baseColor: $baseColor;
$inputz-borderColor: $fontColor;
$inputz-fontSize: 1rem;
$inputz-fontColor: $fontColor;
$inputz-backDropColor: #E4E4E4;
//State Colors//
$inputz-safeColor: $flat-greenSea;
$inputz-warningColor: $flat-carrot;
$inputz-dangerColor: $flat-pomegranate;
$inputz-coolColor: $flat-belizeHole;
$inputz-disableColor: $flat-silver;
//user defined//

//-------------------- place holder hack//

@mixin placeHolderHack {
    
    $inputz-placeHolder: $fontColor;
    
    ::-webkit-input-placeholder {
        color: $inputz-placeHolder;
    }
    
    :-moz-placeholder {
        /* Firefox 18- */
        color: $inputz-placeHolder;
    }
    
    ::-moz-placeholder {
        /* Firefox 19+ */
        color: $inputz-placeHolder;
    }
    
    :-ms-input-placeholder {
        color: $inputz-placeHolder;
    }
}

//-------------------- focus outline//

@mixin focusOutline{
     &.focus {
        outline: px(1) dotted $inputz-fontColor;
    }
}
   


//// -------------------- Base mixins ////

/// -------------------- ignore clean ///
@mixin cleanStyle {
    
    &[data-izStyle='clean']{
        color: $baseColor ;
        background-color: initial;
        border-width: initial;
        border-style: initial;
        border-color: initial;
        padding: initial;
        font-size: initial;
        transition: initial;
        border-radius: initial;
        text-align: initial;
        margin: initial;
        cursor: initial;
        max-width: initial;
    }
}

/// -------------------- disable pointer ///
@mixin disablePointer{
    cursor: not-allowed;
}  

/// -------------------- responsive ///
@mixin responsiveBase{
    /* mobile and all */
    display: block;
    width: 100%;
    
   /* desktop and tablet landscape */
   @include desktopMix{
      display: inline-block;
       width: initial;
   }
}

@mixin responsiveBaseFlex{
     /* mobile and all */
    display: flex;
    
   /* desktop and tablet landscape */
   @include desktopMix{
      display: inline-flex;
   }
}


//// -------------------- Inputz Objects ////
@mixin majorBase{
  color: $inputz-fontColor;
  font-size: $inputz-fontSize;
  padding: px(12) px(15);
  transition: border-color 400ms;
    
  /* Border Props */
  border-width: px(2);
  border-style: solid;
  border-color: lighten($inputz-borderColor,20%);
  border-radius: px(2);
}
/// -------------------- Textfields ///
@mixin textBase{
  
    @include majorBase;
    
  /** State Changes **/
  /* Hover State */
  &:hover{
        
  } 
  /* Focus State */
  &:focus,&.active,&.focus{
    border-color: lighten($inputz-baseColor,5%);  
  }  
   
  &[data-izStyle='safe']{
      border-color: $inputz-safeColor !important;  
  }
    
  &[data-izStyle='warning']{
      border-color: $inputz-warningColor !important;  
  }
    
  &[data-izStyle='danger']{
      border-color: $inputz-dangerColor !important;  
  }
    
  &[disabled],&[data-izStyle='disable']{
      @include disablePointer;
      border-color: $inputz-disableColor !important;  
      background-color: inherit;
  }
    
}

// -------------------- Textbox //

/* Normal Textbox */
@mixin iz-textbox{
    @include responsiveBase;
    @include textBase;
}

// -------------------- Textarea //
/* Normal Textarea */
@mixin iz-textArea{
    @include responsiveBase;
    @include textBase;
    font-size: calc(#{$inputz-fontSize} + 0.05rem );
    font-family: inherit;
    min-height: px(100);
}

/// -------------------- Button Objects ///
/* Button Base rectangular */
@mixin buttonBaseRect{
    @include responsiveBase;
    cursor: pointer;
    text-align: center;
    font-size: calc(#{$inputz-fontSize} + 0.05rem );
    padding: px(10) px(18);
    max-width: px(350);
    transition: background-color 400ms;
    
    /* Border Props */
    border-width: px(2);
    border-style: solid;
    border-radius: px(2);
        
}

/* Button Base Round */
@mixin buttonBaseRound{
    display: inline-flex;
    cursor: pointer;
    font-size: calc(#{$inputz-fontSize} + 0.05rem );
    transition: background-color 400ms;
    justify-content: center;
    align-items: center;
    border-radius: 100%;
    
    /* Border Props */
    border-width: px(2);
    border-style: solid;
   
    /* Svg Sprite icon */
    svg{
        width: 1rem;
        height: 1rem;
    }
        
}
// -------------------- Rectangular Button //
/* Normal Rectangular solid Button */
@mixin iz-btn{
        @include buttonBaseRect;
        background-color: $inputz-baseColor;  
        border-color: $inputz-baseColor;
        color: #fff;
        
        &:hover{
            background-color: darken($inputz-baseColor,3%);
        }
        
        &:focus{
            background-color: darken($inputz-baseColor,7%);
        }
    
        // state change
        &[data-izStyle='safe']{
            background-color: $inputz-safeColor;
            border-color: $inputz-safeColor;
            
            &:hover{
            background-color: darken($inputz-safeColor,2%);
            border-color: darken($inputz-safeColor,2%);
           }
        
           &:focus{
            background-color: darken($inputz-safeColor,6%);
            border-color: darken($inputz-safeColor,6%);
           }
        }
    
       &[data-izStyle='warning']{
            background-color: $inputz-warningColor;
            border-color: $inputz-warningColor;
            
            &:hover{
            background-color: darken($inputz-warningColor,3%);
            border-color: darken($inputz-warningColor,3%);
           }
        
           &:focus{
            background-color: darken($inputz-warningColor,7%);
            border-color: darken($inputz-warningColor,7%);
           }
        }
    
     &[data-izStyle='danger']{
            background-color: $inputz-dangerColor;
            border-color: $inputz-dangerColor;
            
            &:hover{
            background-color: darken($inputz-dangerColor,2%);
            border-color: darken($inputz-dangerColor,2%);
           }
        
           &:focus{
            background-color: darken($inputz-dangerColor,6%);
            border-color: darken($inputz-dangerColor,6%);
           }
        }
    
   &[data-izStyle='cool']{
           background-color: $inputz-coolColor;
            border-color: $inputz-coolColor;
            
            &:hover{
            background-color: darken($inputz-coolColor,2%);
            border-color: darken($inputz-coolColor,2%);
           }
        
           &:focus{
            background-color: darken($inputz-coolColor,6%);
            border-color: darken($inputz-coolColor,6%);
           }
    }
    
     &[data-izStyle='disable'],&[disabled]{
            @include disablePointer;
            background-color: $inputz-disableColor;
            border-color: $inputz-disableColor;
            
            &:hover{
            background-color: $inputz-disableColor;
            border-color: $inputz-disableColor;
           }
        
           &:focus{
            background-color: $inputz-disableColor;
            border-color: $inputz-disableColor;
           }
        }
    
}

/* Normal Rectangular Hollow Button */
@mixin iz-btnHollow{
        @include buttonBaseRect;
        background-color: transparent;  
        border-color: $inputz-baseColor;
        color: $inputz-baseColor;
        font-weight: 600;
        
        &:hover{
           background-color: lighten($inputz-disableColor,18%);
        }
        
        &:focus{
            border-color: darken($inputz-baseColor,7%);
            background-color: lighten($inputz-disableColor,18%);
        }
    
        // state change
        &[data-izStyle='safe']{
            color: $inputz-safeColor;
            border-color: $inputz-safeColor;
            
           &:focus{
            border-color: darken($inputz-safeColor,6%);
           }
        }
    
      &[data-izStyle='warning']{
            color: $inputz-warningColor;
            border-color: $inputz-warningColor;
          
           &:focus{
            border-color: darken($inputz-warningColor,7%);
           }
        }
    
      &[data-izStyle='danger']{
            color: $inputz-dangerColor;
            border-color: $inputz-dangerColor;
        
           &:focus{
            border-color: darken($inputz-dangerColor,6%);
           }
        }
    
    &[data-izStyle='cool']{
            color: $inputz-coolColor;
            border-color: $inputz-coolColor;
        
           &:focus{
            border-color: darken($inputz-coolColor,6%);
           }
    }
    
     &[data-izStyle='disable'],&[disabled]{
            @include disablePointer;
            border-color: $inputz-disableColor;
            color: $inputz-disableColor;
           
         &:hover{
            border-color: $inputz-disableColor;
            color: $inputz-disableColor;
             background-color: initial;
         }
           
           &:focus{
            border-color: $inputz-disableColor;
            color: $inputz-disableColor;
            background-color: initial;
           }
        }
    
}

/* blank button */
@mixin iz-btnBlank{
        @include buttonBaseRect;
        border-color: transparent;  
    font-weight: 600;
    color: lighten($inputz-fontColor,22%);
    
    &:hover{
        color: $inputz-baseColor;
    }
    
    &:focus{
        color: $inputz-baseColor;
    }
}

// -------------------- Round Button //
/* solid Round Button */
@mixin iz-btnRound{
    @include buttonBaseRound;
    color: #fff;
    
    svg{
        fill: #fff;
    }
    
    width: 3rem;
    height: 3rem;
    
    background-color: $inputz-baseColor;
    border-color: $inputz-baseColor;
    
     &:hover{
            background-color: darken($inputz-baseColor,3%);
        }
        
        &:focus{
            background-color: darken($inputz-baseColor,7%);
        }
    
        // state change
       
     &[data-izStyle='disable'],&[disabled]{
            @include disablePointer;
            background-color: $inputz-disableColor;
            border-color: $inputz-disableColor;
            
            &:hover{
            background-color: $inputz-disableColor;
            border-color: $inputz-disableColor;
           }
        
           &:focus{
            background-color: $inputz-disableColor;
            border-color: $inputz-disableColor;
           }
        }
}


/* Hollow Round Button */
@mixin iz-btnRoundHollow{
    @include buttonBaseRound;
     background-color: transparent;  
        border-color: $inputz-baseColor;
        color: $inputz-baseColor;
        font-weight: 600;
    
       width: 3rem;
       height: 3rem;
    
        svg{
        fill: $inputz-baseColor;
       }
        
        &:hover{
           background-color: lighten($inputz-disableColor,18%);
           
        }
        
        &:focus{
            border-color: darken($inputz-baseColor,7%);
            background-color: lighten($inputz-disableColor,18%);
            
               svg{
              fill: darken($inputz-baseColor,7%);
           }
        }
    
       
    
     &[data-izStyle='disable'],&[disabled]{
            @include disablePointer;
            border-color: $inputz-disableColor;
            color: $inputz-disableColor;
         
         svg{
                   fill: $inputz-disableColor;
               }
         
         &:hover{
             border-color: $inputz-disableColor;
            color: $inputz-disableColor;
             background-color: initial;
         }
           
           &:focus{
               border-color: $inputz-disableColor;
            color: $inputz-disableColor;
            background-color: initial;
           }
        }
    
}

/* Hollow Round Button */
@mixin iz-btnPage{
    @include iz-btn;
    padding: 0.1rem 0.3rem;
    display: inline-block;
    width: initial;
    font-size: 0.9rem;
    margin: 0 0.1rem;
    
    &:not(.active){
        color: $inputz-fontColor;
        background-color: initial;
        border-color: transparent;
    }
}

/// -------------------- Select ///
// -------------------- Select(non Js) //
/* Normal select */
@mixin iz-selectBasic{
    @include responsiveBase;
    @include textBase;
}
/* select with js support */
@mixin iz-select{
    @include responsiveBase;
    position: relative;
    select{
         position: absolute;
         opacity: 0;
         z-index: -20;
         left: -999px;
         margin-top: 0;
         margin-bottom: 0;
        
        
        
        
        & + div {
            position: relative;
            display: flex;
            
            @include desktopMix{
                min-width: px(160);
            }
            
            p{
                @include textBase;
                flex: 1;
                overflow: hidden;
                white-space: pre;
                position: relative;
                
                &.active{
                    &:after{
                        transform: rotate(90deg);
                    }
                }
                
                &:after{
                    content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 24 24"><path d="M6.028 0v6.425l5.549 5.575-5.549 5.575v6.425l11.944-12z"/></svg>');
                    position: absolute;
                    right: px(8);
                    transition: all 200ms;
                }
            }
            
            ul{
                position: absolute;
                display: none;
                left: 0;
                top: 3.8rem;
                width: 100%;
                background-color: lighten($inputz-disableColor,20%);
                box-shadow: px(0) px(0) px(7) $inputz-disableColor;
                z-index: 20;
                border-radius: px(3);
                max-height: px(200);
                overflow-y: auto;
                &.defocus{
                    opacity: 0;
                    z-index: -20;
                }
                &.active{
                    display: block;
                }
            }
            
            li{
                display: block;
                padding: 0.4rem 0.3rem;
                border-width: px(1);
                border-style: solid;
                border-color: transparent;
                &:hover{
                    background-color: $inputz-baseColor;
                    color: #fff;
                }
                
                &.focus{
                   border-style:dotted;
                   border-color: $inputz-fontColor;
                }
                
            }
        }
    }
}

/* multi select */
@mixin iz-multiSelect{
    @include responsiveBase;
    position: relative;
    
    select{
         position: absolute;
         opacity: 0;
         z-index: -20;
         margin-top: 0;
         margin-bottom: 0;
        // partner div
        & + div{
            position: relative;
            display: flex;
            flex-direction: column;
            
            @include desktopMix{
                width: px(250);
            }
            
            // active components holder
            >div{
                @include textBase;
                min-height: px(51);
                padding-right: px(35);
                position: relative;
                
                @include desktop{
                    padding-right: px(32);
                }
                
                
            }
            
            // active components
            span{
                background-color: $inputz-baseColor;
                color: #fff;
                letter-spacing: px(0.4);
                padding: 0.2rem 0.6rem;
                margin-right: 0.5rem;
                margin-bottom: 0.25rem;
                margin-top: 0.25rem;
                border-radius: px(2);
                display: none;
                
                @include desktop{
                    font-size: 0.9rem;
                    padding: 0.15rem 0.6rem;
                    margin-bottom: 0.15rem;
                    margin-top: 0.15rem;
                }
                
                &.focus{
                    background-color: $inputz-dangerColor;
                    
                    @include desktop{
                       background-color: $inputz-baseColor; 
                    }
                    
                    i.close{
                        display: inline-block;
                    }
                }
                
                &.active{
                  display: inline-flex;
                }
                
                i.close{
                    margin-left: 1rem;
                    display: none;
                    
                    @include desktop{
                        margin-left: 0.5rem;
                        display: inline-block;
                    }
                    
                    &:after{
                    content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="9" height="9" fill="#fff" viewBox="0 0 24 24"><path d="M23.954 21.03l-9.184-9.095 9.092-9.174-2.832-2.807-9.09 9.179-9.176-9.088-2.81 2.81 9.186 9.105-9.095 9.184 2.81 2.81 9.112-9.192 9.18 9.1z"/></svg>');
                  } 
                }
            }
            
            // list holder
            ul{
                position: absolute;
                display: none;
                left: 0;
                width: 100%;
                margin-top: 0.7rem;
                background-color: lighten($inputz-disableColor,20%);
                box-shadow: px(0) px(0) px(7) $inputz-disableColor;
                z-index: 20;
                border-radius: px(3);
                max-height: px(200);
                overflow-y: auto;
                &.active{
                    display: block;
                }
            }
            
            // list items
            li{
                display: block;
                padding: 0.4rem 0.3rem;
                &:hover{
                    background-color: $inputz-baseColor;
                    color: #fff;
                }
                
                &.deactive{
                    background-color: transparent;
                    color: darken($inputz-disableColor,10%);
                }
            }
        }
    }
    
    

}

/// -------------------- Checkbox and Radio ///
@mixin iz-checkBase{
    @include responsiveBase;
    position: relative;
    cursor: pointer;
    transition: color 400ms;
    
     @include desktopMix{
        margin-right: 1rem;   
    }

    input[type="checkbox"],
    input[type="radio"]{
        opacity: 0;
        cursor: pointer;
    }
    
    span{
        position: absolute;
        left: 0;
        border-style: solid;
    }
}
// -------------------- checkbox(non Js) //
@mixin iz-checkbox{
    @include iz-checkBase;
    @include focusOutline;
    
    span{
        
        $dimentions : px(15);
        
        width: $dimentions;
        height: $dimentions;
        
        border-width: px(2);
        border-color: lighten($inputz-borderColor,20%);
        transition: all 400ms;
        
        top: px(3);
        display: flex;
        justify-content: center;
        align-items: center;
        
        .icon{
            display: none;
        }
    }
    
    input[type="checkbox"]{
        &:checked{
            
            & + span{
                &:before{
                    content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="9" height="9" viewBox="0 0 24 24"><path d="M9 21.035l-9-8.638 2.791-2.87 6.156 5.874 12.21-12.436 2.843 2.817z"/></svg>');
                }
            }
        }
        
        &[disabled]{
            @include disablePointer;
            & + span{
                @include disablePointer;
                 border-color: $inputz-disableColor !important;   
            }
        }
    }
}
// -------------------- radio(non Js) //
@mixin iz-radio{
    @include iz-checkBase;
    @include focusOutline;
    
    span{
        
        $dimentions : px(18);
        
        width: $dimentions;
        height: $dimentions;
        
        border-width: px(2);
        border-color: lighten($inputz-borderColor,10%);
        border-radius: 100%;
        transition: all 400ms;
        
        top: px(3);
        display: flex;
        justify-content: center;
        align-items: center;
        
        &:before{
          content: ' ';
          background-color: $inputz-fontColor;
          width: 0;
          height: 0;
          display: block;
          border-radius: 100%;
          transition: width 100ms,height 100ms;
        }
        
        .icon{
            display: none;
        }
    }
    
    input[type="radio"]{
        &:checked{
            
            & + span{
                &:before{
                   width: px(8);
                   height: px(8);
                }
            }
        }
        
         &[disabled]{
            @include disablePointer;
            & + span{
                @include disablePointer;
                 border-color: $inputz-disableColor !important;   
            }
        }
    }
}

// -------------------- toggle(non Js) //
@mixin iz-toggle{
    @include focusOutline;
    display: flex;
    position: relative;
    cursor: pointer;
    align-items: center;
    
    @include desktopMix{
        display: inline-flex;
        margin-right: 1rem;
    }
    
    width: px(60);
    height: px(30);
    
    border-style: solid;
    border-width: px(2);
    border-color: lighten($inputz-borderColor,40%);
    border-radius: px(20);
    
    padding: 0 px(5);
    
    span{
        width: px(15);
        height: px(15);
        display: block;
        
        border-style: solid;
        border-width: px(2);
        border-color: lighten($inputz-borderColor,20%);
        background-color: lighten($inputz-borderColor,20%);
        border-radius: 100%;
        transition: margin-left 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.4s;
    }
    
    input[type="checkbox"]{
        opacity: 0;
        cursor: pointer;
        position: absolute;
        
        &:checked{
            & + span{
                margin-left: calc(100% - #{px(15)});
                border-color: lighten($inputz-baseColor,8%);
                background-color: lighten($inputz-baseColor,8%);
            }
        }
        
         &[disabled]{
            @include disablePointer;
            & + span{
                @include disablePointer;
                 border-color: $inputz-disableColor !important;   
                 background-color: $inputz-disableColor !important;   
            }
        }
        
    }
}

/// -------------------- Search ///
// -------------------- Search(non Js) //
@mixin iz-search{
    
    @include responsiveBaseFlex;
    
    >span{
        @include responsiveBase;
         @include textBase;
         order: 1;
        border-right: 0;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        position: relative;
        width: 2rem;
        
        &:before{
             content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="13" height="13" viewBox="0 0 24 24"><path d="M23.809 21.646l-6.205-6.205c1.167-1.605 1.857-3.579 1.857-5.711 0-5.365-4.365-9.73-9.731-9.73-5.365 0-9.73 4.365-9.73 9.73 0 5.366 4.365 9.73 9.73 9.73 2.034 0 3.923-.627 5.487-1.698l6.238 6.238 2.354-2.354zm-20.955-11.916c0-3.792 3.085-6.877 6.877-6.877s6.877 3.085 6.877 6.877-3.085 6.877-6.877 6.877c-3.793 0-6.877-3.085-6.877-6.877z"/></svg>');
            position: absolute;
        }
    }
    
    input[type="text"],
    input[type="search"]{
        @include responsiveBase;
        @include textBase;
        order: 2;
        border-left: 0;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        padding-left: 0.3rem;
        flex: 1;
        
        &:focus + span {
            border-color: $inputz-baseColor;
        }
        
        &[data-izStyle="safe"]{
            & + span {
             border-color: $inputz-safeColor;
           }
        }
        
        &[data-izStyle="warning"]{
            & + span {
             border-color: $inputz-warningColor;
           }
        }
        &[data-izStyle="danger"]{
            & + span {
             border-color: $inputz-dangerColor;
           }
        }
        &[disabled]{
            & + span {
             border-color: $inputz-disableColor;
           }
        }
        
    }
}

/// -------------------- File Upload ///
// -------------------- File Upload(non Js) //
@mixin iz-fileUpload{
    @include responsiveBaseFlex;
    position: relative;
    padding: px(12) px(15);
    transition: border-color 400ms;
    align-items: center;
    
    border-width: px(2);
    border-style: dashed;
    border-color: lighten($inputz-borderColor,20%);
    border-radius: px(2);
    cursor: pointer;
    
    &:hover,
    &.focus{
        border-color: lighten($inputz-baseColor,5%);
    }
    
    
    &:before{
       content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" viewBox="0 0 24 24"><path d="M17 5v12c0 2.757-2.243 5-5 5s-5-2.243-5-5v-12c0-1.654 1.346-3 3-3s3 1.346 3 3v9c0 .551-.449 1-1 1s-1-.449-1-1v-8h-2v8c0 1.657 1.343 3 3 3s3-1.343 3-3v-9c0-2.761-2.239-5-5-5s-5 2.239-5 5v12c0 3.866 3.134 7 7 7s7-3.134 7-7v-12h-2z"/></svg>');
        margin-right: 0.5rem;
        position: relative;
        top: 0.1rem;
    }
    
    &:after{
        content: attr(placeholder);
        font-style: italic;
    }
    
    input[type="file"]{
       position: absolute;
        cursor: pointer;
       opacity: 0;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        display: flex;
    }
}


/// -------------------- datePicker ///
@mixin iz-datePicker{
    position: relative;
    
    @include responsiveBaseFlex;
    
    >span{
        @include responsiveBase;
         @include textBase;
         order: 1;
        border-right: 0;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        position: relative;
        width: 2rem;
        
        &:before{
             content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" viewBox="0 0 24 24"><path d="M20 19h-4v-4h4v4zm-6-10h-4v4h4v-4zm6 0h-4v4h4v-4zm-12 6h-4v4h4v-4zm16-14v22h-24v-22h24zm-2 6h-20v14h20v-14zm-8 8h-4v4h4v-4zm-6-6h-4v4h4v-4z"/></svg>');
            position: absolute;
        }
    }
    
    input[type="text"]{
        @include responsiveBase;
        @include textBase;
        order: 2;
        border-left: 0;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        padding-left: 0.7rem;
        flex: 1;
        margin: 0;
        
        &:focus + span {
            border-color: $inputz-baseColor;
        }
        
        &[data-izStyle="safe"]{
            & + span {
             border-color: $inputz-safeColor;
           }
        }
        
        &[data-izStyle="warning"]{
            & + span {
             border-color: $inputz-warningColor;
           }
        }
        &[data-izStyle="danger"]{
            & + span {
             border-color: $inputz-dangerColor;
           }
        }
        &[disabled]{
            & + span {
             border-color: $inputz-disableColor;
           }
        }
        
    }
    
    [data-izPartnerOf="datePicker"]{
        position: absolute;
        top: 3rem;
        margin-top: 0.7rem;
        display: none;
        background-color: lighten($inputz-disableColor,20%);
        box-shadow: px(0) px(0) px(7) $inputz-disableColor;
        z-index: 20;
        border-radius: px(3);
        height: 14.1875rem;
        
        @include desktop{
            
        }
        
        
        &.show{
            display: inline-flex;
            flex-wrap: wrap;
            justify-content: space-between;
            align-content: flex-start;
        }
        
        p,a{
            padding: 0;
            margin: 0;
        }
        
        .dateYear,
        .dateMonth{
            padding: 0.4rem 0.3rem;
        }
        
        .dateYear{
            order: 2;
        }
        
        .dateMonth{
            order: 1;
            display: inline-flex;
            
            a{
                order: 2;
                margin: 0 0.3rem;
            }
            
            span{
                   display: none;
                   content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24"><path d="M6 0l12 12-12 12z"/></svg>');  
                
                @include desktop{
                    display: inline-block;
                }
            }
            
            [data-id="prevArrow"]{
                order: 1;
                transform: rotate(180deg);
            }
            
            [data-id="nextArrow"]{
                order: 3;
            }
        }
        
        table{
            order: 3;
            table-layout: fixed;
            border-collapse: collapse;
            padding: 0;
            margin: 0;
            width: 100%;
        }
        
        th,td{
           text-align: center;
            
        }
        
        td{
            
             &.today{
                a{
                    background-color: $inputz-baseColor;
                    color: #fff;
                    
                    &:hover{
                        background-color: darken($inputz-baseColor,3%);
                    }
                }
            }
            
            
            a{
                 display: inline-block;
                transition: background-color 400ms;
                 width: 25px;
                 height: 23px;
                
                &:hover{
                    background-color: lighten($inputz-disableColor,10%);
                }
                
                &.selected{
                    font-weight: 600;
                }
                
                &:empty{
                    &:hover{
                         background-color: initial;
                    }
                   
                }
            }
            
           
        }
    }
    
     [data-id="backArrow"]{
        content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="13" height="13" viewBox="0 0 24 24"><path d="M13.025 1l-2.847 2.828 6.176 6.176h-16.354v3.992h16.354l-6.176 6.176 2.847 2.828 10.975-11z"/></svg>'); 
        transform: rotate(180deg);
    }
    
    [data-id="monthModal"],
    [data-id="yearModal"],
    [data-id="decadeModal"],
    [data-id="centuryModal"]{
        position: absolute;
        display: none;
        flex-wrap: wrap;
        justify-content: space-between;
        width: 100%;
        height: 100%;
        background-color: lighten($inputz-disableColor,20%);
        align-content: flex-start;
        
        &.active{
            display: flex;
        }
        
        table{
            width: 100%;
        }
        
        td{
            padding: 0.3rem 0;
            
            a{
                display: block;
                width: initial;
                height: initial;
           }
        }
        
        span{
            padding: 0.4rem 0.3rem;
        }
        
    }
   
}


/// -------------------- Progress Bar ///
@mixin iz-progressBar{
    display: block;
    position: relative;
    background-color: lighten($inputz-disableColor,10%);
    height: px(9);
    
    // sizes
    &[data-izSize="small"]{
        height: px(3);
    }
    
    // progress in percent
    &[data-value="0"]{
        &:before{
            width: 0;
        }
    }
    &[data-value="5"]{
        &:before{
            width: 5%;
        }
    }
    &[data-value="10"]{
        &:before{
            width: 10%;
        }
    }
    &[data-value="15"]{
        &:before{
            width: 15%;
        }
    }
    &[data-value="20"]{
        &:before{
            width: 20%;
        }
    }
    &[data-value="25"]{
        &:before{
            width: 25%;
        }
    }
    &[data-value="30"]{
        &:before{
            width: 30%;
        }
    }
    &[data-value="35"]{
        &:before{
            width: 35%;
        }
    }
     &[data-value="40"]{
        &:before{
            width: 40%;
        }
    }
    &[data-value="45"]{
        &:before{
            width: 45%;
        }
    }
    &[data-value="50"]{
        &:before{
            width: 50%;
        }
    }
    &[data-value="55"]{
        &:before{
            width: 55%;
        }
    }
    &[data-value="60"]{
        &:before{
            width: 60%;
        }
    }
    &[data-value="65"]{
        &:before{
            width: 65%;
        }
    }
     &[data-value="70"]{
        &:before{
            width: 70%;
        }
    }
     &[data-value="75"]{
        &:before{
            width: 75%;
        }
    }
    &[data-value="80"]{
        &:before{
            width: 80%;
        }
    }
    &[data-value="85"]{
        &:before{
            width: 85%;
        }
    }
    &[data-value="90"]{
        &:before{
            width: 90%;
        }
    }
    &[data-value="95"]{
        &:before{
            width: 95%;
        }
    }
    &[data-value="100"]{
        &:before{
            width: 100%;
        }
    }
    
    // colors of progress
     &[data-izStyle="safe"]{
            &:before {
             background-color: $inputz-safeColor;
           }
     }
        
     &[data-izStyle="warning"]{
         &:before {
          background-color: $inputz-warningColor;
        }
     }
     &[data-izStyle="danger"]{
         &:before {
          background-color: $inputz-dangerColor;
        }
     }
     &[data-izStyle="disable"],
     &[disabled]{
         &:before {
          background-color: $inputz-disableColor;
        }
     }
    
    
    &:before{
       content: '';
       display: inline-flex;
       background-color: $inputz-baseColor;
        position: absolute;
        height: 100%;
        left: 0;
        top: 0;
        transition: width 400ms;
    }
}